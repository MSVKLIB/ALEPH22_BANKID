#configuration parameters for bankid.cgi script


$adm_base = 'xxx50';
$sid = 'dbi:Oracle:host=localhost;sid=aleph23'; #oracle SID
$aleph_version = '23_1'; #version and installation number as used in directory structure. Like: /exlibris/aleph/u22_1. Usage examples: '22_1', '23_2'
$xserver_url = 'http://localhost/X'; #path to Aleph XServer API, including protocol, port and ending slash, like: 'http://localhost/'
$xserver_upd_bor_user = 'i-am-x-user'; #user with rights to Xserver functions: update-bor, bor-info
$xserver_upd_bor_password = 'blabla'; #its password
$days_before_expiry = 30 ; #how many days before patron registration expiry
$tab31_file = "/exlibris/aleph/u$aleph_version/$adm_base/tab/tab31"; #location of tab31 table - patron statusses
$tab18_file = "/exlibris/aleph/u$aleph_version/$adm_base/tab/tab18.cze"; #location of tab18.lng table - fees (for registraton here)
$tab_pc_tab_exp_field_extended = "/exlibris/aleph/u$aleph_version/$adm_base/tab/pc_tab_exp_field_extended.cze"; #location of pc_tab_exp_field_extended.lng file with patron statuses name definitions

#contact for mail alerts in case of errors;
$admin_mail = 'admin@library.any';

#borrower parameters - parametry ctenare
$patron_language = 'CZE';
$patron_ill_library = 'MVS';
$patron_home_library = 'XXX50'; #in upper case
$patron_ill_total_limit = '0099';
$patron_ill_active_limit = '0010';
$patron_export_consent = 'Y';
$patron_send_all_letters = 'Y';
$patron_plain_html = 'P';

#Patron/borrower status - status ctenare
$patron_bor_status_default = '22'; #this status will be added to patron, if not recognised by age settings below

$bor_status_preregistrated = '31'; #this status is used for patrons after "pre-registration", i.e. online registration without validation of person data. If patron has been already (pre)registrated with this status, they get new registration using bankid, but there is no check against registration expiry date, they get new card/login and their global blocks (delinq) are cleared. 

@current_bor_status_preserve = ('15','16','21'); #array of strings- list of patron statuses for persons existing already in Aleph database, which will be preserved and not owervritten by default value above or on base of age. Could be used for impaired persons of employees. Example:  @current_bor_status_preserve = ('15','21');

$patron_minimal_age = 15; #if the person is younger than this age (real_age<$patron_minimal_age), cannot be registrated. Set to zero to allow registration from birth.
$child_max_age = 0; #if person age is equal or higher than $patron_minimal_age and lower or equal than this value, they get borrower status for children set in $child_bor_status. Set zero (0) for not using this.
$child_bor_status = ''; #if person is recognised as child by age conditions set in $child_max_age, they get this status. Leave blank for not using this.
$youth_max_age = 17; #if person age is equal or higher than $patron_minimal_age and $child_max_age (if not set to zero) and lower or equal than this value, they get borrower status for youth. Set zero (0) for not using this.
$youth_bor_status = '35'; #if person is recognised as youth by age conditions set in $child_max_age, they get borrower status for youth ($youth_bor_status). Leave blank for not using this.
$retired_min_age = 70; #if person age is equal or higher than this value, they get borrower status for older people/retired (set in $retired_bor_status). Set zero (0) for not using this.
$retired_bor_status = '30'; #if person is recognised as retired by age conditions set in $retired_min_age, they get this status. Leave blank for not using this.

 
#Patron/borrower type - typ ctenare, written to z305_bor_type 
$patron_bor_type_default = 'VS'; #this type will be added to patron, if not recognised by age or type by age are not in use. Can be blank/empty.
$child_max_age = 0; #up to this age, including it
$child_bor_type = '';  #borrower type for children
$retired_min_age = '70';  #from this age, including it
$retired_bor_type = 'DU';  #borrower type for older people/retired


$patron_login_prefix = 'E'; #if set, new logins will be added as a number sequence after this prefix. Recommended to use/
$patron_login_id_type = '01';

$address_valid_days = 365; #how long since now the address will be valid to
$patron_online_note = "Online registrace - vydat prÅ¯kaz"; #note added to patron , that will be shown to librarian when user will come to library
$cash_description = 'Online registrace BankID'; #description added to cash fee
$circ_log_action = 90; #circulation log z309 action (z309-action), as defined in tab_circ_log.eng, tab_circ_log.cze for online registration, number
$circ_log_text = 'Online registrace BankID'; #circulation log z309 text (z309-text)

$mail2patron_url = 'http://opac.library.any/cgi-bin/mailregistrace.cgi?id={{login}}&regcode={{password}}'; #url service for sending confirmation mail to patron after successful registration
                                #leave empty string or any false value for NOT sending the email
                                #strings {{login}} and {{password}} are replaced by real values below in script flow


# If registrating person has a card for extra priviledges (status) in the library, like for impaired (ZTP), they can upload it (photo or scan) in registration form (frontend).
#  The picture is send to the email of registration department, where it is manually checked and processed.
$ztp_file_directory = "/exlibris/aleph/u$aleph_version/alephe/apache/cgi-bin/prukazy"; #directory where copies of card for free registration are stored
$ztp_registrace_mail = 'registrace@library.any'; #library mail address where uploaded copies of card for free registration are sent


$check_patron_ignore_dia = 1; #if true (1), when person name got from bankid is checked against Aleph database (if patron already exists), the comparison inores diacritics



#these parameter ale loaded to cgi skript by: require bankid.config
#note that all variables mentioned here must be declared as "our" before this require call in bankid.cgi

